{"ast":null,"code":"const URL_API = 'http://localhost:3333';\n\nasync function create(user) {\n  return fetch(`${URL_API}/api/user`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json());\n}\n\nasync function findByID(idJ) {\n  return fetch(`${URL_API}/api/user/${idJ}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth-token': localStorage.getItem('token')\n    }\n  }).then(response => response.json());\n}\n\nasync function login(_ref) {\n  let {\n    mail,\n    pass\n  } = _ref;\n  return fetch(`${URL_API}/api/user/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      mail,\n      pass\n    })\n  }).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error('Credenciales Inválidas');\n    }\n  });\n}\n\nexport { create, findByID, login };","map":{"version":3,"names":["URL_API","create","user","fetch","method","body","JSON","stringify","headers","then","response","json","findByID","idJ","localStorage","getItem","login","mail","pass","status","Error"],"sources":["C:/xampp814/htdocs/tp2-apphib/front/src/services/user.services.js"],"sourcesContent":["const URL_API = 'http://localhost:3333'\r\n\r\nasync function create(user) {\r\n    return fetch(`${URL_API}/api/user`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n}\r\n\r\nasync function findByID(idJ) {\r\n    return fetch(`${URL_API}/api/user/${idJ}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('token')\r\n        }\r\n    })\r\n    .then(response => response.json())   \r\n}\r\n\r\nasync function login({mail, pass}) {\r\n    return fetch(`${URL_API}/api/user/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({mail, pass})\r\n    })\r\n    .then(response => {\r\n        if (response.status === 200) {\r\n            return response.json()\r\n        } else {\r\n            throw new Error('Credenciales Inválidas')\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport {\r\n    create,\r\n    findByID,\r\n    login,\r\n    \r\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,MAAf,CAAsBC,IAAtB,EAA4B;EACxB,OAAOC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;IAChCI,MAAM,EAAE,MADwB;IAEhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAF0B;IAGhCM,OAAO,EAAE;MACL,gBAAgB;IADX;EAHuB,CAAxB,CAAL,CAONC,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPX,CAAP;AAQH;;AAED,eAAeC,QAAf,CAAwBC,GAAxB,EAA6B;EACzB,OAAOV,KAAK,CAAE,GAAEH,OAAQ,aAAYa,GAAI,EAA5B,EAA+B;IACvCT,MAAM,EAAE,KAD+B;IAEvCI,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,cAAcM,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFT;EAF8B,CAA/B,CAAL,CAONN,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPX,CAAP;AAQH;;AAED,eAAeK,KAAf,OAAmC;EAAA,IAAd;IAACC,IAAD;IAAOC;EAAP,CAAc;EAC/B,OAAOf,KAAK,CAAE,GAAEH,OAAQ,iBAAZ,EAA8B;IACtCI,MAAM,EAAE,MAD8B;IAEtCI,OAAO,EAAE;MACL,gBAAgB;IADX,CAF6B;IAKtCH,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACU,IAAD;MAAOC;IAAP,CAAf;EALgC,CAA9B,CAAL,CAONT,IAPM,CAODC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;MACzB,OAAOT,QAAQ,CAACC,IAAT,EAAP;IACH,CAFD,MAEO;MACH,MAAM,IAAIS,KAAJ,CAAU,wBAAV,CAAN;IACH;EACJ,CAbM,CAAP;AAcH;;AAGD,SACInB,MADJ,EAEIW,QAFJ,EAGII,KAHJ"},"metadata":{},"sourceType":"module"}