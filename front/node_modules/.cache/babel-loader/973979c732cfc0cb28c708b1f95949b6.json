{"ast":null,"code":"const URL_API = 'http://localhost:3333';\n\nasync function find() {\n  let id = JSON.parse(localStorage.getItem('user'))._id;\n\n  console.log('%ceventos.services.js line:5 id', 'color: #007acc;', id);\n  return fetch(`${URL_API}/api/eventos`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth-token': localStorage.getItem('token')\n    }\n  }).then(response => response.json()).catch(error => console.log(error));\n}\n\nasync function findByID(id) {\n  return fetch(`${URL_API}/api/eventos/${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth-token': localStorage.getItem('token')\n    }\n  }).then(response => response.json());\n}\n\nasync function create(evento) {\n  return fetch(`${URL_API}/api/eventos`, {\n    method: 'POST',\n    body: JSON.stringify(evento),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json());\n}\n\nexport { find, findByID, create };","map":{"version":3,"names":["URL_API","find","id","JSON","parse","localStorage","getItem","_id","console","log","fetch","method","headers","then","response","json","catch","error","findByID","create","evento","body","stringify"],"sources":["C:/xampp814/htdocs/tp2-apphib/front/src/services/eventos.services.js"],"sourcesContent":["const URL_API = 'http://localhost:3333'\r\n\r\nasync function find() {\r\n    let id = JSON.parse(localStorage.getItem('user'))._id\r\n    console.log('%ceventos.services.js line:5 id', 'color: #007acc;', id);\r\n    return fetch(`${URL_API}/api/eventos`,{\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('token')\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nasync function findByID(id) {\r\n    return fetch(`${URL_API}/api/eventos/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('token')\r\n        }\r\n    })\r\n        .then(response => response.json())   \r\n}\r\n\r\nasync function create(evento) {\r\n    return fetch(`${URL_API}/api/eventos`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(evento),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n}\r\n\r\nexport {  \r\n    find,\r\n    findByID,\r\n    create\r\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,IAAf,GAAsB;EAClB,IAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,GAAlD;;EACAC,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,iBAA/C,EAAkEP,EAAlE;EACA,OAAOQ,KAAK,CAAE,GAAEV,OAAQ,cAAZ,EAA0B;IAClCW,MAAM,EAAE,KAD0B;IAElCC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,cAAcP,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFT;EAFyB,CAA1B,CAAL,CAONO,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPX,EAQNC,KARM,CAQAC,KAAK,IAAIT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CART,CAAP;AASH;;AAED,eAAeC,QAAf,CAAwBhB,EAAxB,EAA4B;EACxB,OAAOQ,KAAK,CAAE,GAAEV,OAAQ,gBAAeE,EAAG,EAA9B,EAAiC;IACzCS,MAAM,EAAE,KADiC;IAEzCC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,cAAcP,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFT;EAFgC,CAAjC,CAAL,CAOFO,IAPE,CAOGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPf,CAAP;AAQH;;AAED,eAAeI,MAAf,CAAsBC,MAAtB,EAA8B;EAC1B,OAAOV,KAAK,CAAE,GAAEV,OAAQ,cAAZ,EAA2B;IACnCW,MAAM,EAAE,MAD2B;IAEnCU,IAAI,EAAElB,IAAI,CAACmB,SAAL,CAAeF,MAAf,CAF6B;IAGnCR,OAAO,EAAE;MACL,gBAAgB;IADX;EAH0B,CAA3B,CAAL,CAONC,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPX,CAAP;AAQH;;AAED,SACId,IADJ,EAEIiB,QAFJ,EAGIC,MAHJ"},"metadata":{},"sourceType":"module"}