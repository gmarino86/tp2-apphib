{"ast":null,"code":"const URL_API = 'http://localhost:3333';\n\nasync function create(user) {\n  return fetch(`${URL_API}/api/user`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  });\n}\n\nasync function findByID(user_id) {\n  return fetch(`${URL_API}/api/user/${user_id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'auth-token': localStorage.getItem('token')\n    }\n  }).then(response => response.json());\n}\n\nasync function login(_ref) {\n  let {\n    mail,\n    pass\n  } = _ref;\n  return fetch(`${URL_API}/api/user/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      mail,\n      pass\n    })\n  }).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error('Credenciales Inválidas');\n    }\n  });\n} // Trae los contactos de un usuario\n\n\nasync function getAllUsers(contactos) {\n  if (contactos.length > 0) {\n    return fetch(`${URL_API}/api/user/contactos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify(contactos)\n    }).then(response => response.json());\n  } else {\n    return [];\n  }\n} // Trae los contactos de un usuario\n\n\nasync function getAllPlayers(user_ids) {\n  if (user_ids.length > 0) {\n    return fetch(`${URL_API}/api/user/jugadores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify(user_ids)\n    }).then(response => response.json());\n  } else {\n    return [];\n  }\n}\n\nexport { create, findByID, login, getAllUsers, getAllPlayers };","map":{"version":3,"names":["URL_API","create","user","fetch","method","headers","body","JSON","stringify","then","response","json","findByID","user_id","localStorage","getItem","login","mail","pass","status","Error","getAllUsers","contactos","length","getAllPlayers","user_ids"],"sources":["C:/xampp814/htdocs/tp2-apphib/front/src/services/user.services.js"],"sourcesContent":["const URL_API = 'http://localhost:3333'\r\n\r\nasync function create(user) {\r\n    return fetch(`${URL_API}/api/user`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n}\r\n\r\nasync function findByID(user_id) {\r\n    return fetch(`${URL_API}/api/user/${user_id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('token')\r\n        }\r\n    })\r\n    .then(response => response.json())   \r\n}\r\n\r\nasync function login({mail, pass}) {\r\n    return fetch(`${URL_API}/api/user/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({mail, pass})\r\n    })\r\n    .then(response => {\r\n        if (response.status === 200) {\r\n            return response.json()\r\n        } else {\r\n            throw new Error('Credenciales Inválidas')\r\n        }\r\n    })\r\n}\r\n\r\n// Trae los contactos de un usuario\r\nasync function getAllUsers(contactos){\r\n    if(contactos.length > 0){\r\n        return fetch(`${URL_API}/api/user/contactos`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': localStorage.getItem('token'),\r\n            },\r\n            body: JSON.stringify(contactos)\r\n        })\r\n        .then(response => response.json())\r\n    } else{\r\n        return []\r\n    }\r\n}\r\n\r\n// Trae los contactos de un usuario\r\nasync function getAllPlayers(user_ids){\r\n    if(user_ids.length > 0){\r\n        return fetch(`${URL_API}/api/user/jugadores`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': localStorage.getItem('token'),\r\n            },\r\n            body: JSON.stringify(user_ids)\r\n        })\r\n        .then(response => response.json())\r\n    } else{\r\n        return []\r\n    }\r\n}\r\n\r\nexport {\r\n    create,\r\n    findByID,\r\n    login,\r\n    getAllUsers,\r\n    getAllPlayers\r\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,MAAf,CAAsBC,IAAtB,EAA4B;EACxB,OAAOC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;IAChCI,MAAM,EAAE,MADwB;IAEhCC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFuB;IAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;EAL0B,CAAxB,CAAL,CAONO,IAPM,CAODC,QAAQ,IAAI;IACd,OAAOA,QAAQ,CAACC,IAAT,EAAP;EACH,CATM,CAAP;AAUH;;AAED,eAAeC,QAAf,CAAwBC,OAAxB,EAAiC;EAC7B,OAAOV,KAAK,CAAE,GAAEH,OAAQ,aAAYa,OAAQ,EAAhC,EAAmC;IAC3CT,MAAM,EAAE,KADmC;IAE3CC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,cAAcS,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFT;EAFkC,CAAnC,CAAL,CAONN,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPX,CAAP;AAQH;;AAED,eAAeK,KAAf,OAAmC;EAAA,IAAd;IAACC,IAAD;IAAOC;EAAP,CAAc;EAC/B,OAAOf,KAAK,CAAE,GAAEH,OAAQ,iBAAZ,EAA8B;IACtCI,MAAM,EAAE,MAD8B;IAEtCC,OAAO,EAAE;MACL,gBAAgB;IADX,CAF6B;IAKtCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACS,IAAD;MAAOC;IAAP,CAAf;EALgC,CAA9B,CAAL,CAONT,IAPM,CAODC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;MACzB,OAAOT,QAAQ,CAACC,IAAT,EAAP;IACH,CAFD,MAEO;MACH,MAAM,IAAIS,KAAJ,CAAU,wBAAV,CAAN;IACH;EACJ,CAbM,CAAP;AAcH,C,CAED;;;AACA,eAAeC,WAAf,CAA2BC,SAA3B,EAAqC;EACjC,IAAGA,SAAS,CAACC,MAAV,GAAmB,CAAtB,EAAwB;IACpB,OAAOpB,KAAK,CAAE,GAAEH,OAAQ,qBAAZ,EAAkC;MAC1CI,MAAM,EAAE,MADkC;MAE1CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,cAAcS,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFT,CAFiC;MAM1CT,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAec,SAAf;IANoC,CAAlC,CAAL,CAQNb,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,CAAP;EASH,CAVD,MAUM;IACF,OAAO,EAAP;EACH;AACJ,C,CAED;;;AACA,eAAea,aAAf,CAA6BC,QAA7B,EAAsC;EAClC,IAAGA,QAAQ,CAACF,MAAT,GAAkB,CAArB,EAAuB;IACnB,OAAOpB,KAAK,CAAE,GAAEH,OAAQ,qBAAZ,EAAkC;MAC1CI,MAAM,EAAE,MADkC;MAE1CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,cAAcS,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFT,CAFiC;MAM1CT,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeiB,QAAf;IANoC,CAAlC,CAAL,CAQNhB,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,CAAP;EASH,CAVD,MAUM;IACF,OAAO,EAAP;EACH;AACJ;;AAED,SACIV,MADJ,EAEIW,QAFJ,EAGII,KAHJ,EAIIK,WAJJ,EAKIG,aALJ"},"metadata":{},"sourceType":"module"}